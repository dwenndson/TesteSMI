// <auto-generated />
using System;
using IogServices.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IogServices.Migrations
{
    [DbContext(typeof(IogContext))]
    [Migration("20200115202552_ReformedMeterTypeToRateType")]
    partial class ReformedMeterTypeToRateType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IogServices.Models.DAO.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("IogServices.Models.DAO.MeterModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("ManufacturerId");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("MeterModels");
                });

            modelBuilder.Entity("IogServices.Models.DAO.RateType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("RateTypes");
                });

            modelBuilder.Entity("IogServices.Models.DAO.SmcModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("ManufacturerId");

                    b.Property<string>("Name");

                    b.Property<int>("PositionsCount");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("SmcModels");
                });

            modelBuilder.Entity("IogServices.Models.DAO.MeterModel", b =>
                {
                    b.HasOne("IogServices.Models.DAO.Manufacturer", "Manufacturer")
                        .WithMany("MeterModels")
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("IogServices.Models.DAO.SmcModel", b =>
                {
                    b.HasOne("IogServices.Models.DAO.Manufacturer", "Manufacturer")
                        .WithMany("SmcModels")
                        .HasForeignKey("ManufacturerId");
                });
#pragma warning restore 612, 618
        }
    }
}
